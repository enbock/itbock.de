openapi: 3.0.0
info:
  title: Homepage Backend API
  description: API zur Generierung und Validierung von TOTP Tokens sowie GPT-Funktionalität.
  version: 1.0.0
servers:
  - url: http://localhost:3000/dev/
    description: Local Server

paths:
  /generate-token:
    post:
      summary: Generiert einen neuen TOTP-Token für einen Benutzer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "user123"
      responses:
        '200':
          description: Token erfolgreich generiert
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Token generated
                  token:
                    type: string
                    example: 123456
                  otpauth:
                    type: string
                    example: "otpauth://totp/YourAppName:user123?secret=SECRET_KEY&issuer=YourAppName"
        '400':
          description: Ungültige Anfrage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User ID is required

  /validate-token:
    post:
      summary: Validiert einen TOTP-Token für einen Benutzer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "user123"
                token:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: Token ist gültig
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Token is valid
        '400':
          description: Ungültige Anfrage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User ID and token are required
        '401':
          description: Token ist ungültig
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid token

  /gpt:
    post:
      summary: Führt eine GPT-Abfrage durch und liefert eine Antwort.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      role:
                        type: string
                        example: "user"
                      content:
                        type: string
                        example: "Hello, how are you?"
      responses:
        '200':
          description: GPT-Antwort erfolgreich
          content:
            application/json:
              schema:
                type: object
                properties:
                  commands:
                    type: array
                    items:
                      type: string
                  say:
                    type: string
                    example: "Hello, I am fine."
                  role:
                    type: string
                    example: "assistant"
                  language:
                    type: string
                    example: "en-US"
                  audio:
                    type: string
                    example: "/+MYxAAGe2oYEABNogG//mMbyAMY5AgUZ5Oz0wcBhBBDCaZ4DHn2An..."
        '400':
          description: Ungültige Anfrage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input"
        '500':
          description: Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unexpected error: <error_message>"

  /audio-transform:
    post:
      summary: Transkribiert eine Base64-codierte Audiodatei, die als JSON hochgeladen wird.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                audio:
                  type: string
                  format: base64
                  description: Die hochzuladende, Base64-codierte Audiodatei.
      responses:
        '200':
          description: Die Audiodatei wurde erfolgreich transkribiert.
          content:
            application/json:
              schema:
                type: object
                properties:
                  transcript:
                    type: string
                    example: "Dies ist die transkribierte Audiodatei."
        '400':
          description: Ungültige Anfrage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Audio data is missing"
        '500':
          description: Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unexpected error: <error_message>"

  /i18n:
    post:
      summary: Übersetzt die bereitgestellten Daten in eine andere Sprache.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  example: {"key": "value"}
                language:
                  type: string
                  example: "es-ES"
      responses:
        '200':
          description: Übersetzung erfolgreich
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: {"key": "valor"}
        '400':
          description: Ungültige Anfrage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Data and language are required"
        '500':
          description: Serverfehler
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unexpected error: <error_message>"
